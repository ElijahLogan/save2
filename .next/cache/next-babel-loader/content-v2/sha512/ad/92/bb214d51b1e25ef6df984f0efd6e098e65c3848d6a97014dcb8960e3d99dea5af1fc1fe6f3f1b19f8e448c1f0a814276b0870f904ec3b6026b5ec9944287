{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/projects/saveSave2/savesage/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Layout from '../components/layout.js';\n/*\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport awsconfig from '../src/aws-exports';\nAmplify.configure(awsconfig);\n*/\n\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      cart: [],\n      carttotal: 0\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      /*\n      const cart = JSON.parse(localStorage.getItem('cart'));\n      const carttotal = JSON.parse(localStorage.getItem('total'));\n      if (cart) {\n          this.setState({\n              cart,\n              carttotal\n          });\n      }\n      */\n    });\n  }\n\n  /*\n   addToCart = (product) => {\n      \n      this.setState({\n          cart: [...this.state.cart, product]\n      });\n      localStorage.setItem('cart', JSON.stringify(this.state.cart));\n  }\n   deleteFromCart = (productId) => {\n       //get cart\n      let cart = this.state.cart;\n       //make new cart by removing  itemId that was selected\n      let newCart = cart.filter(item => item.id !== productId)\n       //change state to reflect new cart\n      this.setState({\n          cart: newCart\n      })\n        localStorage.setItem('cart', JSON.stringify(this.state.cart));\n  }\n   calculateTotal = (price) => {\n      this.setState({\n          carttotal: this.state.carttotal + price\n      });\n      localStorage.setItem('total', JSON.stringify(this.state.carttotal));\n  }\n  */\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Desktop/projects/saveSave2/savesage/pages/_app.js"],"names":["App","Layout","MyApp","cart","carttotal","render","Component","pageProps","props"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAE3B;AACJG,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAF2B;;AAAA,+CAOf,MAAM;AACtB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,KAlBkC;AAAA;;AAoBnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUIC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,wBACQ,QAAC,MAAD;AAAA,6BACI,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR;AAKH;;AA9DkC","sourcesContent":["import App from 'next/app'\nimport Layout from '../components/layout.js'\n/*\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport awsconfig from '../src/aws-exports';\nAmplify.configure(awsconfig);\n*/\n\nexport default class MyApp extends App {\n\n    state = {\n        cart: [],\n        carttotal: 0\n    }\n\n    componentDidMount = () => {\n        /*\n        const cart = JSON.parse(localStorage.getItem('cart'));\n        const carttotal = JSON.parse(localStorage.getItem('total'));\n        if (cart) {\n            this.setState({\n                cart,\n                carttotal\n            });\n        }\n        */\n    };\n\n    /*\n\n    addToCart = (product) => {\n\n       \n        this.setState({\n            cart: [...this.state.cart, product]\n        });\n        localStorage.setItem('cart', JSON.stringify(this.state.cart));\n    }\n\n    deleteFromCart = (productId) => {\n\n        //get cart\n        let cart = this.state.cart;\n\n        //make new cart by removing  itemId that was selected\n        let newCart = cart.filter(item => item.id !== productId)\n\n        //change state to reflect new cart\n        this.setState({\n            cart: newCart\n        })\n\n\n        localStorage.setItem('cart', JSON.stringify(this.state.cart));\n    }\n\n    calculateTotal = (price) => {\n        this.setState({\n            carttotal: this.state.carttotal + price\n        });\n        localStorage.setItem('total', JSON.stringify(this.state.carttotal));\n    }\n*/\n    render() {\n        const { Component, pageProps } = this.props\n        return (\n                <Layout>\n                    <Component {...pageProps} />\n                </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}